{"version":3,"sources":["components/Persona.module.css","components/Survey.module.css","Home.module.css","content/images/data_literacy_bcps.png","content/images/DataLiteracyLogo.png","components/Header.module.css","content/images/BCDataLiteracy.png","content/images/bcgovlogo.jpg","components/Footer.module.css","content/images/bg.png","content/en/HowDataLiterateAreYou.md","content/en/Purpose.md","content/en/WhoShouldUseThisTool.md","content/en/AssessmentResults.md","content/en/DataPersona.md","content/en/DataLiteracyLevel.md","content/en/personas/FrontLine.md","content/en/personas/Analyst.md","content/en/personas/DataScientist.md","content/en/personas/DataGovernor.md","content/en/personas/Architect.md","content/en/personas/BusinessTranslator.md","content/en/literacyLevels/Foundational.md","content/en/literacyLevels/Capable.md","content/en/literacyLevels/Advanced.md","content/en/literacyLevels/Leading.md","content/en/courses/FoundationalCourses.md","content/en/courses/CapableCourses.md","content/en/courses/AdvancedCourses.md","content/en/courses/LeadingCourses.md","content/fr/HowDataLiterateAreYou.md","content/fr/Purpose.md","content/fr/WhoShouldUseThisAssessment.md","content/fr/AssessmentResults.md","content/fr/DataPersona.md","content/fr/DataLiteracyLevel.md","content/fr/personas/FrontLine.md","content/fr/personas/Analyst.md","content/fr/personas/DataScientist.md","content/fr/personas/DataSteward.md","content/fr/personas/IT.md","content/fr/personas/Executive.md","content/fr/literacyLevels/Novice.md","content/fr/literacyLevels/Apprentice.md","content/fr/literacyLevels/Practitioner.md","content/fr/literacyLevels/Expert.md","content/fr/courses/NoviceCourses.md","content/fr/courses/ApprenticeCourses.md","content/fr/courses/PractitionerCourses.md","content/fr/courses/ExpertCourses.md","helpers.js","components/Header.js","components/Survey.js","components/Persona.js","components/Footer.js","Home.js","dictionaries/en.js","App_EN.js","dictionaries/fr.js","App_FR.js","serviceWorker.js","index.js"],"names":["module","exports","getMarkdown","markdownFile","updateState","a","fetch","text","markdownLinkRenderer","props","href","target","children","getUUID","localStorage","uuid","uuidv4","cspsColours","Header","className","styles","header","src","DataLiteracyBCPS","alt","DataLiteracyLogo","Survey","useEffect","button","document","createElement","innerHTML","t","onclick","restartSurvey","restartButton","querySelector","appendChild","defaultThemeColors","SurveyJS","ThemeColors","applyTheme","model","SurveyJSON","startSurvey","result","setSurveyResults","data","urlEncoded","URLSearchParams","append","JSON","stringify","options","method","headers","body","response","console","log","locale","getLocale","container","survey","onComplete","Persona","useState","persona","setPersona","literacyLevel","setLiteracyLevel","assessmentResultsMD","setAssessmentResultsMD","aboutDataPersonaMD","setAboutDataPersonaMD","aboutDataLiteracyLevelMD","setAboutDataLiteracyLevelMD","personaMD","setPersonaMD","literacyLevelMD","setLiteracyLevelMD","courseMD","setCourseMD","surveyResults","found","personas","forEach","skillCount","skillsFound","skill","skills","includes","personaPercentage","markdown","title","replace","findPersona","score","level","dataLiteracyLevels","find","min","max","literacyLevels","courses","findLiteracyLevel","AssessmentResults","DataPersona","DataLiteracyLevel","resultsPage","source","saveAsPDF","onClick","root","getElementById","filename","image","type","quality","pagebreak","mode","html2pdf","set","from","save","Fragment","resultTypeHeading","resultBox","emoji","toUpperCase","renderers","Footer","footer","FIPBar","FIPCanada","Home","startedSurvey","howDataLiterate","setHowDataLiterate","purpose","setPurpose","whoShouldUse","setWhoShouldUse","HowDataLiterateAreYou","Purpose","WhoShouldUseThisTool","home","style","backgroundImage","bg","contentContainer","introContent","App_EN","dictionary","FrontLine","Analyst","DataScientist","DataGovernor","Architect","BusinessTranslator","Foundational","Capable","Advanced","Leading","FoundationalCourses","CapableCourses","AdvancedCourses","LeadingCourses","App_FR","WhoShouldUseThisAssessment","DataSteward","IT","Executive","Novice","Apprentice","Practitioner","Expert","NoviceCourses","ApprenticeCourses","PractitionerCourses","ExpertCourses","Boolean","window","location","hostname","match","documentElement","lang","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2afc0d8b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultsPage\":\"Persona_resultsPage__38aqN\",\"title\":\"Persona_title__D5mwo\",\"saveAsPDF\":\"Persona_saveAsPDF__1t4xn\",\"resultTypeHeading\":\"Persona_resultTypeHeading__3wXkr\",\"resultBox\":\"Persona_resultBox__1g4Na\",\"emoji\":\"Persona_emoji__3duoI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Survey_container__3sEWq\",\"survey\":\"Survey_survey__2Z-hr\",\"restartButton\":\"Survey_restartButton__1Umjf\",\"decoration\":\"Survey_decoration__1nWwb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__1gOLJ\",\"contentContainer\":\"Home_contentContainer__2DeBB\",\"introContent\":\"Home_introContent__2GDBo\"};","module.exports = __webpack_public_path__ + \"static/media/data_literacy_bcps.4b3cf954.png\";","module.exports = __webpack_public_path__ + \"static/media/DataLiteracyLogo.3b6505cd.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__15S-L\"};","module.exports = __webpack_public_path__ + \"static/media/BCDataLiteracy.96d8ef8d.png\";","module.exports = __webpack_public_path__ + \"static/media/bcgovlogo.cc7acf13.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2fYyf\"};","module.exports = __webpack_public_path__ + \"static/media/bg.d344d357.png\";","module.exports = __webpack_public_path__ + \"static/media/HowDataLiterateAreYou.79d206a1.md\";","module.exports = __webpack_public_path__ + \"static/media/Purpose.42b3f02e.md\";","module.exports = __webpack_public_path__ + \"static/media/WhoShouldUseThisTool.7c67b6d3.md\";","module.exports = __webpack_public_path__ + \"static/media/AssessmentResults.916b05d8.md\";","module.exports = __webpack_public_path__ + \"static/media/DataPersona.db7aa6a0.md\";","module.exports = __webpack_public_path__ + \"static/media/DataLiteracyLevel.5e001237.md\";","module.exports = __webpack_public_path__ + \"static/media/FrontLine.720d433a.md\";","module.exports = __webpack_public_path__ + \"static/media/Analyst.40b60c5e.md\";","module.exports = __webpack_public_path__ + \"static/media/DataScientist.852b0c97.md\";","module.exports = __webpack_public_path__ + \"static/media/DataGovernor.79164d57.md\";","module.exports = __webpack_public_path__ + \"static/media/Architect.599ce2c3.md\";","module.exports = __webpack_public_path__ + \"static/media/BusinessTranslator.53be49cb.md\";","module.exports = __webpack_public_path__ + \"static/media/Foundational.495d6fcb.md\";","module.exports = __webpack_public_path__ + \"static/media/Capable.f6956a1f.md\";","module.exports = __webpack_public_path__ + \"static/media/Advanced.98758983.md\";","module.exports = __webpack_public_path__ + \"static/media/Leading.11f03255.md\";","module.exports = __webpack_public_path__ + \"static/media/FoundationalCourses.ed13c5df.md\";","module.exports = __webpack_public_path__ + \"static/media/CapableCourses.916cd888.md\";","module.exports = __webpack_public_path__ + \"static/media/AdvancedCourses.d59e2eca.md\";","module.exports = __webpack_public_path__ + \"static/media/LeadingCourses.537bf893.md\";","module.exports = __webpack_public_path__ + \"static/media/HowDataLiterateAreYou.8e97a193.md\";","module.exports = __webpack_public_path__ + \"static/media/Purpose.bee93182.md\";","module.exports = __webpack_public_path__ + \"static/media/WhoShouldUseThisAssessment.3eed42fb.md\";","module.exports = __webpack_public_path__ + \"static/media/AssessmentResults.1569fb6f.md\";","module.exports = __webpack_public_path__ + \"static/media/DataPersona.dcf37ff7.md\";","module.exports = __webpack_public_path__ + \"static/media/DataLiteracyLevel.ae33999c.md\";","module.exports = __webpack_public_path__ + \"static/media/FrontLine.2532c36b.md\";","module.exports = __webpack_public_path__ + \"static/media/Analyst.66b56225.md\";","module.exports = __webpack_public_path__ + \"static/media/DataScientist.24eec5da.md\";","module.exports = __webpack_public_path__ + \"static/media/DataSteward.f31ae3cc.md\";","module.exports = __webpack_public_path__ + \"static/media/IT.6b138f5c.md\";","module.exports = __webpack_public_path__ + \"static/media/Executive.18306079.md\";","module.exports = __webpack_public_path__ + \"static/media/Novice.5af6e198.md\";","module.exports = __webpack_public_path__ + \"static/media/Apprentice.39c19b4d.md\";","module.exports = __webpack_public_path__ + \"static/media/Practitioner.ee04727b.md\";","module.exports = __webpack_public_path__ + \"static/media/Expert.00ecd8cf.md\";","module.exports = __webpack_public_path__ + \"static/media/NoviceCourses.3e9408be.md\";","module.exports = __webpack_public_path__ + \"static/media/ApprenticeCourses.9889086c.md\";","module.exports = __webpack_public_path__ + \"static/media/PractitionerCourses.ebb0c293.md\";","module.exports = __webpack_public_path__ + \"static/media/ExpertCourses.600282a1.md\";","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport async function getMarkdown(markdownFile, updateState) {\n    markdownFile = await fetch(markdownFile);\n    markdownFile = await markdownFile.text();\n    updateState(markdownFile);\n}\n\nexport function markdownLinkRenderer(props) {\n    return <a href={props.href} target=\"_blank\">{props.children}</a>;\n}\n\nexport function getUUID() {\n    if (localStorage){\n        if (localStorage.uuid){\n            return localStorage.uuid;\n        }\n        let uuid = uuidv4();\n        localStorage.uuid = uuid;\n        return uuid;\n    }\n    return uuidv4();\n}\n\nexport const cspsColours = {\n    purple: \"rgb(63, 42, 86)\",\n    grey: \"rgb(78, 91, 115)\",\n    lightGrey: \"#EDEFF1\",\n    mediumGrey: \"#E5E7EA\",\n    coral: \"#DA797A\"\n};","import React from 'react';\nimport DataLiteracyBCPS from '../content/images/data_literacy_bcps.png';\nimport DataLiteracyLogo from '../content/images/DataLiteracyLogo.png';\nimport styles from './Header.module.css';\n\nexport default function Header(props) {\n\n    return (\n        <div className={styles.header}>\n            <img src={DataLiteracyBCPS} alt=\"\"/>\n            <img src={DataLiteracyLogo} alt=\"\"/>\n        </div>\n    );\n}","import React, { useEffect } from 'react';\nimport * as SurveyJS from \"survey-react\";\nimport {cspsColours, getUUID} from '../helpers';\nimport SurveyJSON from '../content/survey.json';\nimport './customSurveyJS.css';\nimport \"survey-react/survey.css\";\nimport styles from './Survey.module.css';\n\nexport default function Survey(props) {\n\n    useEffect(() => {\n        let button = document.createElement(\"button\");\n        button.innerHTML = props.t[\"Restart\"];\n        button.onclick = restartSurvey\n        button.className = styles.restartButton + \" light\";\n\n        document.querySelector(\".sv_nav\").appendChild(button);\n    },[]);\n\n    var defaultThemeColors = SurveyJS.StylesManager.ThemeColors[\"default\"];\n\n    defaultThemeColors[\"$main-color\"] = cspsColours.grey;\n    defaultThemeColors[\"$main-hover-color\"] = cspsColours.purple;\n    defaultThemeColors[\"$text-color\"] = \"black\";\n    defaultThemeColors[\"$body-container-background-color\"] = \"white\";\n\n    SurveyJS.StylesManager.applyTheme();\n\n    var model = new SurveyJS.Model(SurveyJSON);\n    model.locale = props.t.getLocale;\n\n    function restartSurvey() {\n        props.startSurvey(false);\n    }\n\n    async function onComplete(result) {\n        props.setSurveyResults(result.data);\n\n        let urlEncoded = new URLSearchParams();\n        urlEncoded.append(\"results\", JSON.stringify(result.data));\n        urlEncoded.append(\"uuid\", getUUID());\n\n        let options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': \"application/x-www-form-urlencoded\"\n            },\n            body: urlEncoded\n        };\n\n        let response = await fetch(\"https://us-central1-data-literacy-assessment.cloudfunctions.net/storeResults\", options);\n        response = await response.text();\n        console.log(response);\n    }\n\n    return (\n        <div className={styles.container}>\n            <div className={styles.survey}>\n                <SurveyJS.Survey\n                    model={model}\n                    onComplete={onComplete}\n                />\n            </div>\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport html2pdf from 'html2pdf.js';\nimport ReactMarkdown from 'react-markdown';\nimport { getMarkdown, markdownLinkRenderer } from '../helpers';\nimport personas from '../content/personas.json';\nimport dataLiteracyLevels from '../content/dataLiteracyLevels.json';\nimport styles from './Persona.module.css';\n\nexport default function Persona(props) {\n\n    const [persona, setPersona] = useState(null);\n    const [literacyLevel, setLiteracyLevel] = useState(null);\n\n    const [assessmentResultsMD, setAssessmentResultsMD] = useState(null);\n    const [aboutDataPersonaMD, setAboutDataPersonaMD] = useState(null);\n    const [aboutDataLiteracyLevelMD, setAboutDataLiteracyLevelMD] = useState(null);\n    const [personaMD, setPersonaMD] = useState(null);\n    const [literacyLevelMD, setLiteracyLevelMD] = useState(null);\n    const [courseMD, setCourseMD] = useState(null);\n\n    useEffect(() => {\n        if (props.surveyResults){\n            findPersona();\n            findLiteracyLevel();\n        }\n\n        getMarkdown(props.markdown.AssessmentResults, setAssessmentResultsMD);\n        getMarkdown(props.markdown.DataPersona, setAboutDataPersonaMD);\n        getMarkdown(props.markdown.DataLiteracyLevel, setAboutDataLiteracyLevelMD);\n\n    },[props.surveyResults])\n\n    function findPersona() {\n        let found;\n        personas.forEach(persona => {\n            let skillCount = 0;\n            let skillsFound = 0;\n            for (let skill in persona.skills){\n                if (persona.skills[skill].includes(props.surveyResults[skill])){\n                    skillsFound++;\n                }\n                skillCount++;\n            }\n\n            let personaPercentage = skillsFound / skillCount;\n\n            if (!found || personaPercentage > found.personaPercentage){\n                found = {\n                    personaPercentage: personaPercentage,\n                    ...persona\n                };\n            }\n\n        });\n        setPersona(found);\n\n        getMarkdown(props.markdown.personas[found.title.replace(/\\s/g, '')], setPersonaMD);\n    }\n\n    function findLiteracyLevel() {\n\n        let score = 0;\n\n        for (let skill in props.surveyResults){\n            if (typeof(props.surveyResults[skill]) === \"number\"){\n                score += props.surveyResults[skill];\n            }\n        }\n\n        let level = dataLiteracyLevels.find(level => {\n            if (score >= level.score.min && score <= level.score.max){\n                return true;\n            }\n        })\n\n        setLiteracyLevel(level);\n\n        getMarkdown(props.markdown.literacyLevels[level.title.replace(/\\s/g, '')], setLiteracyLevelMD);\n        getMarkdown(props.markdown.courses[level.title.replace(/\\s/g, '') + \"Courses\"], setCourseMD);\n    }\n\n    function saveAsPDF() {\n        let root = document.getElementById(\"root\");\n\n        let options = {\n            filename: props.t[\"Data Literacy and Persona Assessment\"] + \".pdf\",\n            image: { type: 'jpeg', quality: 0.98 },\n            pagebreak: {\n                mode: 'avoid-all'\n            }\n        };\n\n        html2pdf().set(options).from(root).save();\n    }\n\n    return (\n        <div className={styles.resultsPage}>\n            <h1 className={styles.title}>{props.t[\"Assessment results\"]}</h1>\n            <ReactMarkdown source={assessmentResultsMD}/>\n            <button className={styles.saveAsPDF + \" light\"} onClick={saveAsPDF}><i className=\"material-icons\">cloud_download</i> {props.t[\"Download as pdf\"]}</button>\n            {persona && literacyLevel &&\n                <React.Fragment>\n                    <h2 className={styles.resultTypeHeading}>1. {props.t[\"Data Persona\"]}</h2>\n                    <div className={styles.resultBox}>\n                        <div className={styles.emoji}>{persona.emoji}</div>\n                        <div>\n                            <h3>{props.t[persona.title].toUpperCase()}</h3>\n                            <ReactMarkdown source={personaMD}/>\n                        </div>\n                    </div>\n                    <ReactMarkdown source={aboutDataPersonaMD}/>\n                    <h2 className={styles.resultTypeHeading}>2. {props.t[\"Data Literacy Level\"]}</h2>\n                    <div className={styles.resultBox}>\n                        <div className={styles.emoji}>{literacyLevel.emoji}</div>\n                        <div>\n                            <h3>{props.t[literacyLevel.title].toUpperCase()}</h3>\n                            <ReactMarkdown source={literacyLevelMD}/>\n                        </div>\n                    </div>\n                    <ReactMarkdown source={aboutDataLiteracyLevelMD}/>\n                    <h2 className={styles.resultTypeHeading}>3. {props.t[\"Proposed Curriculum\"]}</h2>\n                    <ReactMarkdown source={courseMD} renderers={{\"link\": markdownLinkRenderer}}/>\n                </React.Fragment>\n            }\n        </div>\n    );\n}","import React from 'react';\nimport FIPBar from '../content/images/BCDataLiteracy.png';\nimport FIPCanada from '../content/images/bcgovlogo.jpg';\nimport styles from './Footer.module.css';\n\nexport default function Footer(props) {\n\n    return (\n        <div className={styles.footer}>\n            <img src={FIPBar} alt=\"\"/>\n            <img src={FIPCanada} alt=\"\"/>\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { getMarkdown, getUUID } from './helpers';\nimport Header from './components/Header';\nimport Survey from './components/Survey';\nimport Persona from './components/Persona';\nimport Footer from './components/Footer';\nimport styles from './Home.module.css';\nimport bg from './content/images/bg.png';\n\nexport default function Home(props) {\n\n    const [startedSurvey, startSurvey] = useState(false);\n    const [surveyResults, setSurveyResults] = useState(null);\n\n    const [howDataLiterate, setHowDataLiterate] = useState(null);\n    const [purpose, setPurpose] = useState(null);\n    const [whoShouldUse, setWhoShouldUse] = useState(null);\n\n    useEffect(() => {\n        getMarkdown(props.markdown.HowDataLiterateAreYou, setHowDataLiterate);\n        getMarkdown(props.markdown.Purpose, setPurpose);\n        getMarkdown(props.markdown.WhoShouldUseThisTool, setWhoShouldUse);\n        getUUID();\n    },[props.markdown.HowDataLiterateAreYou, props.markdown.Purpose, props.markdown.WhoShouldUseThisTool]);\n\n    return (\n        <div className={styles.home} style={{backgroundImage: `url(${bg})`}}>\n            <Header/>\n            {!surveyResults &&\n                <React.Fragment>\n                    {!startedSurvey &&\n                        <div className={styles.contentContainer}>\n                            <h1>{props.t[\"Data Literacy Self-Assessment Tool\"]}</h1>\n                            <div className={styles.introContent}>\n                                <div>\n                                    <h2>{props.t[\"How Data Literate Are You?\"]}</h2>\n                                    <ReactMarkdown source={howDataLiterate}/>\n                                </div>\n                                <div>\n                                    <h2>{props.t[\"Purpose\"]}</h2>\n                                    <ReactMarkdown source={purpose}/>\n                                </div>\n                                <div>\n                                    <h2>{props.t[\"Who Should Use this Tool\"]}</h2>\n                                    <ReactMarkdown source={whoShouldUse}/>\n                                    <button onClick={() => startSurvey(true)}>{props.t[\"Start Assessment\"]}</button>\n                                </div>\n                            </div>\n                        </div>\n                    }\n                    {startedSurvey &&\n                        <Survey t={props.t} setSurveyResults={setSurveyResults} startSurvey={startSurvey}/>\n                    }\n                </React.Fragment>\n            }\n            {surveyResults &&\n                <Persona t={props.t} surveyResults={surveyResults} markdown={props.markdown}/>\n            }\n            <Footer/>\n        </div>\n    );\n}","export default {\n    \"getLocale\": \"en\",\n    \"getOppositeLocale\": \"fr\",\n    \"getOppositeLang\": \"Français\",\n    \"getSwitchLangWarning\": \"Changer de langue maintenant fera redémarrer l'enquête, êtes-vous sûr de vouloir le faire ?\\n\\nSwitching languages now will cause the survey to restart, are you sure you'd like to do this?\",\n    \"Data Literacy Self-Assessment Tool\": \"Data Literacy Self-Assessment Tool\",\n    \"How Data Literate Are You?\": \"How Data Literate Are You?\",\n    \"Purpose\": \"Purpose\",\n    \"Who Should Use this Tool\": \"Who Should Use this Tool\",\n    \"Start Assessment\": \"Start Assessment\",\n    \"Restart\": \"Restart\",\n    \"Assessment results\": \"Assessment results\",\n    \"Data Persona\": \"Data Persona\",\n    \"Data Literacy Level\": \"Data Literacy Level\",\n    \"Front Line\": \"Front Line\",\n    \"Analyst\": \"Analyst\",\n    \"Data Scientist\": \"Data Scientist\",\n    \"Data Governor\": \"Data Governor\",\n    \"Architect\": \"Architect\",\n    \"Business Translator\": \"Business Translator\",\n    \"Foundational\": \"Foundational\",\n    \"Capable\": \"Capable\",\n    \"Advanced\": \"Advanced\",\n    \"Leading\": \"Leading\",\n    \"Proposed Curriculum\": \"Proposed Curriculum\",\n    \"Download as pdf\": \"Download as pdf\"\n}","import React from 'react';\nimport Home from './Home';\nimport dictionary from './dictionaries/en';\n\nimport HowDataLiterateAreYou from './content/en/HowDataLiterateAreYou.md';\nimport Purpose from './content/en/Purpose.md';\nimport WhoShouldUseThisTool from './content/en/WhoShouldUseThisTool.md';\n\nimport AssessmentResults from './content/en/AssessmentResults.md';\nimport DataPersona from './content/en/DataPersona.md';\nimport DataLiteracyLevel from './content/en/DataLiteracyLevel.md';\n\nimport FrontLine from './content/en/personas/FrontLine.md';\nimport Analyst from './content/en/personas/Analyst.md';\nimport DataScientist from './content/en/personas/DataScientist.md';\nimport DataGovernor from './content/en/personas/DataGovernor.md';\nimport Architect from './content/en/personas/Architect.md';\nimport BusinessTranslator from './content/en/personas/BusinessTranslator.md';\n\nimport Foundational from './content/en/literacyLevels/Foundational.md';\nimport Capable from './content/en/literacyLevels/Capable.md';\nimport Advanced from './content/en/literacyLevels/Advanced.md';\nimport Leading from './content/en/literacyLevels/Leading.md';\n\nimport FoundationalCourses from './content/en/courses/FoundationalCourses.md';\nimport CapableCourses from './content/en/courses/CapableCourses.md';\nimport AdvancedCourses from './content/en/courses/AdvancedCourses.md';\nimport LeadingCourses from './content/en/courses/LeadingCourses.md';\n\nexport default function App_EN() {\n    return (\n        <Home\n            t={dictionary}\n            markdown={{\n                HowDataLiterateAreYou,\n                Purpose,\n                WhoShouldUseThisTool,\n                AssessmentResults,\n                DataPersona,\n                DataLiteracyLevel,\n                personas: {\n                    FrontLine,\n                    Analyst,\n                    DataScientist,\n                    DataGovernor,\n                    Architect,\n                    BusinessTranslator\n                },\n                literacyLevels: {\n                    Foundational,\n                    Capable,\n                    Advanced,\n                    Leading\n                },\n                courses: {\n                    FoundationalCourses,\n                    CapableCourses,\n                    AdvancedCourses,\n                    LeadingCourses\n                }\n            }}\n        />\n    );\n}\n","export default {\n    \"getLocale\": \"fr\",\n    \"getOppositeLocale\": \"en\",\n    \"getOppositeLang\": \"English\",\n    \"getSwitchLangWarning\": \"Switching languages now will cause the survey to restart, are you sure you'd like to do this?\\n\\nChanger de langue maintenant fera redémarrer l'enquête, êtes-vous sûr de vouloir le faire ?\",\n    \"Data Literacy and Persona Assessment\": \"Maîtrise des données et évaluation des personnes\",\n    \"How Data Literate Are You?\": \"A quel point êtes-vous compétent en matière de données ?\",\n    \"Purpose\": \"Objet\",\n    \"Who Should Use this Assessment\": \"Qui devrait utiliser cette évaluation\",\n    \"Start Assessment\": \"Commencer l'évaluation\",\n    \"Restart\": \"Redémarrer\",\n    \"Assessment results\": \"Résultats de l'évaluation\",\n    \"Data Persona\": \"Données Persona\",\n    \"Data Literacy Level\": \"Niveau de maîtrise des données\",\n    \"Front Line\": \"En première ligne\",\n    \"Analyst\": \"Analyste\",\n    \"Data Scientist\": \"Data Scientist\",\n    \"Data Steward\": \"Responsable des données\",\n    \"IT\": \"IT\",\n    \"Executive\": \"Exécutif\",\n    \"Novice\": \"Novice\",\n    \"Apprentice\": \"Apprenti\",\n    \"Practitioner\": \"Praticien\",\n    \"Expert\": \"Expert\",\n    \"Proposed Curriculum\": \"Programme d'études proposé\",\n    \"Download as pdf\": \"Télécharger en pdf\"\n}","import React from 'react';\nimport Home from './Home';\nimport dictionary from './dictionaries/fr';\n\nimport HowDataLiterateAreYou from './content/fr/HowDataLiterateAreYou.md';\nimport Purpose from './content/fr/Purpose.md';\nimport WhoShouldUseThisAssessment from './content/fr/WhoShouldUseThisAssessment.md';\n\nimport AssessmentResults from './content/fr/AssessmentResults.md';\nimport DataPersona from './content/fr/DataPersona.md';\nimport DataLiteracyLevel from './content/fr/DataLiteracyLevel.md';\n\nimport FrontLine from './content/fr/personas/FrontLine.md';\nimport Analyst from './content/fr/personas/Analyst.md';\nimport DataScientist from './content/fr/personas/DataScientist.md';\nimport DataSteward from './content/fr/personas/DataSteward.md';\nimport IT from './content/fr/personas/IT.md';\nimport Executive from './content/fr/personas/Executive.md';\n\nimport Novice from './content/fr/literacyLevels/Novice.md';\nimport Apprentice from './content/fr/literacyLevels/Apprentice.md';\nimport Practitioner from './content/fr/literacyLevels/Practitioner.md';\nimport Expert from './content/fr/literacyLevels/Expert.md';\n\nimport NoviceCourses from './content/fr/courses/NoviceCourses.md';\nimport ApprenticeCourses from './content/fr/courses/ApprenticeCourses.md';\nimport PractitionerCourses from './content/fr/courses/PractitionerCourses.md';\nimport ExpertCourses from './content/fr/courses/ExpertCourses.md';\n\nexport default function App_FR() {\n    return (\n        <Home\n            t={dictionary}\n            markdown={{\n                HowDataLiterateAreYou,\n                Purpose,\n                WhoShouldUseThisAssessment,\n                AssessmentResults,\n                DataPersona,\n                DataLiteracyLevel,\n                personas: {\n                    FrontLine,\n                    Analyst,\n                    DataScientist,\n                    DataSteward,\n                    IT,\n                    Executive\n                },\n                literacyLevels: {\n                    Novice,\n                    Apprentice,\n                    Practitioner,\n                    Expert\n                },\n                courses: {\n                    NoviceCourses,\n                    ApprenticeCourses,\n                    PractitionerCourses,\n                    ExpertCourses\n                }\n            }}\n        />\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App_EN from './App_EN';\nimport App_FR from './App_FR';\nimport * as serviceWorker from './serviceWorker';\n\nif (document.documentElement.lang === \"fr\"){\n    ReactDOM.render(\n        <React.StrictMode>\n          <App_FR />\n        </React.StrictMode>,\n        document.getElementById('root')\n      );\n}\nelse {\n    ReactDOM.render(\n        <React.StrictMode>\n          <App_EN />\n        </React.StrictMode>,\n        document.getElementById('root')\n      );\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}